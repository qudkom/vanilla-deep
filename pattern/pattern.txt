디자인패턴

Builder 패턴

Factory 패턴 (레거시에서도 자주 등장, 여전히 사용)
조건에 따라 객체를 생성하는 방식

Strategy 패턴 (레거시 + 트렌드 모두 해당)
조건에 따라 행동을 바꾸는 함수/객체 조합

Observer 패턴 (트렌드: 이벤트 기반 프로그래밍에 사용)
EventEmitter, pub/sub, RxJS 같은 흐름의 이해에 필수

Decorator 패턴 (트렌드: TS 데코레이터, React HOC, 미들웨어 등과 연관)
함수/객체에 기능을 덧붙이는 방식. 프록시와도 궁합 좋음

Proxy + Command 패턴 (트렌드)
요청을 캡슐화해 나중에 실행할 수 있는 구조 만들기